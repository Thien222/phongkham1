import { PrismaClient } from '@prisma/client';
import crypto from 'crypto';

const prisma = new PrismaClient();

function hashPassword(password) {
  return crypto.createHash('sha256').update(password).digest('hex');
}

async function main() {
  console.log('üå± Seeding database...');

  // Clear existing data
  if (prisma.user) {
    await prisma.user.deleteMany();
  }
  await prisma.invoiceItem.deleteMany();
  await prisma.invoice.deleteMany();
  await prisma.examination.deleteMany();
  await prisma.refraction.deleteMany();
  await prisma.product.deleteMany();
  await prisma.patient.deleteMany();
  if (prisma.voucher) {
    await prisma.voucher.deleteMany();
  }

  if (prisma.setting) {
    await prisma.setting.deleteMany();
  }

  // Create default admin user
  if (prisma.user) {
    console.log('Creating default admin user...');
    await prisma.user.create({
      data: {
        username: 'admin',
        password: hashPassword('admin123'),
        fullName: 'Qu·∫£n tr·ªã vi√™n',
        role: 'admin',
        isActive: true
      }
    });
  }

  if (prisma.setting) {
    console.log('Creating default settings...');
    await prisma.setting.createMany({
      data: [
        { key: 'clinicName', value: 'Ph√≤ng kh√°m M·∫Øt S√†i G√≤n' },
        { key: 'clinicAddress', value: '123 L√™ L·ª£i, Qu·∫≠n 1, TP.HCM' },
        { key: 'clinicPhone', value: '028-1234-5678' },
        { key: 'clinicEmail', value: 'contact@saigoneyecare.vn' },
        { key: 'taxRate', value: '10' },
        { key: 'lowStockThreshold', value: '5' },
        { key: 'maxBackups', value: '10' },
        { key: 'backupPath', value: '' }
      ]
    });
  }

  // Create patients
  console.log('Creating patients...');
  const patients = await Promise.all([
    prisma.patient.create({
      data: {
        code: 'BN000000000001',
        fullName: 'Nguy·ªÖn VƒÉn A',
        phone: '0901234567',
        gender: 'male',
        birthDate: new Date('1990-05-15'),
        address: '123 ƒê∆∞·ªùng L√™ L·ª£i, Q1, TP.HCM',
        visitPurpose: 'refraction',
        visitStatus: 'waiting'
      }
    }),
    prisma.patient.create({
      data: {
        code: 'BN000000000002',
        fullName: 'Tr·∫ßn Th·ªã B',
        phone: '0912345678',
        gender: 'female',
        birthDate: new Date('1985-08-20'),
        address: '456 ƒê∆∞·ªùng Nguy·ªÖn Hu·ªá, Q1, TP.HCM',
        visitPurpose: 'examination',
        visitStatus: 'waiting'
      }
    }),
    prisma.patient.create({
      data: {
        code: 'BN000000000003',
        fullName: 'L√™ VƒÉn C',
        phone: '0923456789',
        gender: 'male',
        birthDate: new Date('1995-03-10'),
        address: '789 ƒê∆∞·ªùng Pasteur, Q3, TP.HCM',
        visitPurpose: 'both',
        visitStatus: 'waiting'
      }
    }),
    prisma.patient.create({
      data: {
        code: 'BN000000000004',
        fullName: 'Ph·∫°m Th·ªã D',
        phone: '0934567890',
        gender: 'female',
        birthDate: new Date('1992-12-25'),
        address: '321 ƒê∆∞·ªùng ƒêi·ªán Bi√™n Ph·ªß, Q3, TP.HCM',
        visitPurpose: 'refraction',
        visitStatus: 'waiting'
      }
    }),
    prisma.patient.create({
      data: {
        code: 'BN000000000005',
        fullName: 'Ho√†ng VƒÉn E',
        phone: '0945678901',
        gender: 'male',
        birthDate: new Date('1988-07-18'),
        address: '654 ƒê∆∞·ªùng C√°ch M·∫°ng Th√°ng 8, Q10, TP.HCM',
        visitPurpose: 'examination',
        visitStatus: 'waiting'
      }
    })
  ]);

  // Create products
  console.log('Creating products...');
  const products = await Promise.all([
    // TR√íNG K√çNH (Glasses)
    prisma.product.create({
      data: {
        code: 'L001',
        name: 'Tr√≤ng k√≠nh c·∫≠n th·ªã Essilor',
        category: 'glasses',
        manufacturer: 'Essilor',
        material: 'Ch·ªëng AS xanh, ƒë√¥i m√†u',
        sphRange: '-3.00',
        cylRange: '-1.00',
        price: 300000,
        quantity: 50,
        minStock: 10,
        imageUrl: 'https://images.unsplash.com/photo-1574258495973-f010dfbb5371?w=400'
      }
    }),
    prisma.product.create({
      data: {
        code: 'L002',
        name: 'Tr√≤ng k√≠nh vi·ªÖn th·ªã Hoya',
        category: 'glasses',
        manufacturer: 'Hoya',
        material: 'Ch·ªëng AS xanh',
        sphRange: '+2.50',
        cylRange: '-0.50',
        price: 400000,
        quantity: 30,
        minStock: 5,
        imageUrl: 'https://images.unsplash.com/photo-1509695507497-903c140c43b0?w=400'
      }
    }),
    prisma.product.create({
      data: {
        code: 'L003',
        name: 'Tr√≤ng k√≠nh ƒë·ªïi m√†u Transitions',
        category: 'glasses',
        manufacturer: 'Essilor',
        material: 'ƒê·ªïi m√†u, ch·ªëng UV',
        sphRange: '-2.00',
        cylRange: 'Plano',
        price: 550000,
        quantity: 40,
        minStock: 8,
        imageUrl: 'https://images.unsplash.com/photo-1606497426098-cd0c2ccc3cb5?w=400'
      }
    }),
    prisma.product.create({
      data: {
        code: 'L004',
        name: 'Tr√≤ng k√≠nh ch·ªëng √°nh s√°ng xanh',
        category: 'glasses',
        manufacturer: 'Zeiss',
        material: 'Blue Light Protection',
        sphRange: '-1.50',
        cylRange: '-0.75',
        price: 480000,
        quantity: 35,
        minStock: 7,
        imageUrl: 'https://images.unsplash.com/photo-1577803645773-f96470509666?w=400'
      }
    }),
    prisma.product.create({
      data: {
        code: 'L005',
        name: 'Tr√≤ng k√≠nh lo·∫°n Hoya Premium',
        category: 'glasses',
        manufacturer: 'Hoya',
        material: 'Ch·ªëng tr·∫ßy, ch·ªëng b√°m b·∫©n',
        sphRange: 'Plano',
        cylRange: '-2.00',
        price: 520000,
        quantity: 25,
        minStock: 5,
        imageUrl: 'https://images.unsplash.com/photo-1589782182703-2aaa69037b5b?w=400'
      }
    }),
    
    // G·ªåNG K√çNH (Frames/Lenses)
    prisma.product.create({
      data: {
        code: 'G001',
        name: 'G·ªçng k√≠nh kim lo·∫°i b·∫°c Titanium',
        category: 'lenses',
        manufacturer: 'Rayban',
        material: 'Titanium, si√™u nh·∫π',
        price: 350000,
        quantity: 25,
        minStock: 5,
        imageUrl: 'https://images.unsplash.com/photo-1511499767150-a48a237f0083?w=400'
      }
    }),
    prisma.product.create({
      data: {
        code: 'G002',
        name: 'G·ªçng k√≠nh nh·ª±a TR90 ƒëen',
        category: 'lenses',
        manufacturer: 'Oakley',
        material: 'TR90, d·∫ªo dai',
        price: 280000,
        quantity: 30,
        minStock: 6,
        imageUrl: 'https://images.unsplash.com/photo-1501472312651-726afe119ff1?w=400'
      }
    }),
    prisma.product.create({
      data: {
        code: 'G003',
        name: 'G·ªçng k√≠nh vu√¥ng Vintage',
        category: 'lenses',
        manufacturer: 'Gucci',
        material: 'Acetate cao c·∫•p',
        price: 450000,
        quantity: 20,
        minStock: 4,
        imageUrl: 'https://images.unsplash.com/photo-1574258495973-f010dfbb5371?w=400'
      }
    }),
    prisma.product.create({
      data: {
        code: 'G004',
        name: 'G·ªçng k√≠nh tr√≤n Harry Potter',
        category: 'lenses',
        manufacturer: 'Gentle Monster',
        material: 'Kim lo·∫°i v√†ng',
        price: 320000,
        quantity: 28,
        minStock: 5,
        imageUrl: 'https://images.unsplash.com/photo-1577803645773-f96470509666?w=400'
      }
    }),
    prisma.product.create({
      data: {
        code: 'G005',
        name: 'G·ªçng k√≠nh n·ª≠a vi·ªÅn th·ªÉ thao',
        category: 'lenses',
        manufacturer: 'Nike',
        material: 'Nh·ª±a composite',
        price: 290000,
        quantity: 32,
        minStock: 6,
        imageUrl: 'https://images.unsplash.com/photo-1589782182703-2aaa69037b5b?w=400'
      }
    }),
    
    // THU·ªêC (Medicine)
    prisma.product.create({
      data: {
        code: 'M001',
        name: 'Thu·ªëc nh·ªè m·∫Øt Refresh Tears',
        category: 'medicine',
        manufacturer: 'Allergan',
        price: 50000,
        quantity: 100,
        minStock: 20,
        expiresAt: new Date('2026-12-31'),
        imageUrl: 'https://images.unsplash.com/photo-1584308666744-24d5c474f2ae?w=400'
      }
    }),
    prisma.product.create({
      data: {
        code: 'M002',
        name: 'Vitamin A cho m·∫Øt',
        category: 'medicine',
        manufacturer: 'Blackmores',
        price: 120000,
        quantity: 80,
        minStock: 15,
        expiresAt: new Date('2027-06-30'),
        imageUrl: 'https://images.unsplash.com/photo-1550572017-4a6e8e3b7e2f?w=400'
      }
    }),
    prisma.product.create({
      data: {
        code: 'M003',
        name: 'Thu·ªëc kh√°ng vi√™m m·∫Øt Tobradex',
        category: 'medicine',
        manufacturer: 'Novartis',
        price: 85000,
        quantity: 60,
        minStock: 12,
        expiresAt: new Date('2026-09-15'),
        imageUrl: 'https://images.unsplash.com/photo-1471864190281-a93a3070b6de?w=400'
      }
    }),
    prisma.product.create({
      data: {
        code: 'M004',
        name: 'N∆∞·ªõc r·ª≠a m·∫Øt Optrex',
        category: 'medicine',
        manufacturer: 'Reckitt Benckiser',
        price: 75000,
        quantity: 90,
        minStock: 18,
        expiresAt: new Date('2026-11-20'),
        imageUrl: 'https://images.unsplash.com/photo-1585435557343-3b092031a831?w=400'
      }
    }),
    prisma.product.create({
      data: {
        code: 'M005',
        name: 'Thu·ªëc gi·∫£m kh√¥ m·∫Øt Systane',
        category: 'medicine',
        manufacturer: 'Alcon',
        price: 95000,
        quantity: 70,
        minStock: 14,
        expiresAt: new Date('2027-03-10'),
        imageUrl: 'https://images.unsplash.com/photo-1587854692152-cbe660dbde88?w=400'
      }
    })
  ]);

  // Create refractions
  console.log('Creating refractions...');
  await prisma.refraction.create({
    data: {
      patientId: patients[0].id,
      odSph: '-3.50',
      odCyl: '-1.00',
      odAxis: '180',
      odVa: '10/10',
      osSph: '-3.25',
      osCyl: '-0.75',
      osAxis: '15',
      osVa: '10/10',
      notes: 'B·ªánh nh√¢n c·∫≠n th·ªã, ƒëeo k√≠nh th∆∞·ªùng xuy√™n'
    }
  });

  // Create examinations
  console.log('Creating examinations...');
  await prisma.examination.create({
    data: {
      patientId: patients[1].id,
      symptoms: 'M·∫Øt m·ªù, nh·ª©c ƒë·∫ßu khi ƒë·ªçc s√°ch',
      diagnosis: 'C·∫≠n th·ªã nh·∫π, c·∫ßn ƒëeo k√≠nh',
      treatment: 'ƒêeo k√≠nh ch·ªëng √°nh s√°ng xanh',
      medications: 'Kh√¥ng c·∫ßn thu·ªëc'
    }
  });

  // Create invoices
  console.log('Creating invoices...');
  await prisma.invoice.create({
    data: {
      code: 'INV-20250903-001',
      patientId: patients[0].id,
      type: 'glasses',
      status: 'PAID',
      subtotal: 650000,
      tax: 65000,
      discount: 0,
      total: 715000,
      items: {
        create: [
          {
            productId: products[0].id,
            quantity: 1,
            unitPrice: 300000,
            totalPrice: 300000
          },
          {
            productId: products[2].id,
            quantity: 1,
            unitPrice: 350000,
            totalPrice: 350000
          }
        ]
      }
    }
  });

  await prisma.invoice.create({
    data: {
      code: 'INV-20250903-002',
      patientId: patients[1].id,
      type: 'glasses',
      status: 'UNPAID',
      subtotal: 400000,
      tax: 40000,
      discount: 0,
      total: 440000,
      items: {
        create: [
          {
            productId: products[1].id,
            quantity: 1,
            unitPrice: 400000,
            totalPrice: 400000
          }
        ]
      }
    }
  });

  // Create vouchers
  console.log('Creating vouchers...');
  await Promise.all([
    prisma.voucher.create({
      data: {
        code: 'KHAI2025',
        description: 'Khuy·∫øn m√£i khai tr∆∞∆°ng - Gi·∫£m 10%',
        type: 'percent',
        value: 10,
        minAmount: 200000,
        maxDiscount: 100000,
        startDate: new Date('2025-01-01'),
        endDate: new Date('2025-12-31'),
        usageLimit: 100
      }
    }),
    prisma.voucher.create({
      data: {
        code: 'VIP50K',
        description: 'Voucher VIP - Gi·∫£m 50K',
        type: 'fixed',
        value: 50000,
        minAmount: 300000,
        startDate: new Date('2025-01-01'),
        endDate: new Date('2025-12-31'),
        usageLimit: 50
      }
    }),
    prisma.voucher.create({
      data: {
        code: 'TET2025',
        description: 'Khuy·∫øn m√£i T·∫øt - Gi·∫£m 15%',
        type: 'percent',
        value: 15,
        minAmount: 500000,
        maxDiscount: 200000,
        startDate: new Date('2025-01-01'),
        endDate: new Date('2025-02-28'),
        usageLimit: 200
      }
    })
  ]);

  console.log('‚úÖ Seeding completed successfully!');
  console.log(`Created ${patients.length} patients`);
  console.log(`Created ${products.length} products`);
  console.log('Created 3 vouchers');
}

main()
  .catch((e) => {
    console.error('‚ùå Error seeding database:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });

